"""Фикстуры — это повторно используемые функции, определенные для возврата
данных, необходимых в тестовых функциях. Фикстуры оборачиваются
декоратором pytest.fixture. Пример использования фикстуры — возврат
экземпляра приложения для выполнения тестов для конечных точек API.
Фикстура может использоваться для определения клиента приложения,
который возвращается и используется в тестовых функциях, что устраняет
необходимость переопределять экземпляр приложения в каждом тесте. Мы
увидим, как это используется в разделе «Написание тестов для конечных точек
REST API».  """
import pytest
from models.events import EventUpdate

# Fixture is defined.


@pytest.fixture
def event() -> EventUpdate:
    return EventUpdate(
        title="FastAPI Book Launch",
        image="https://packt.com/fastapi.png",
        description="We will be discussing the contents of \
        the FastAPI book in this event.Ensure to come with\
        your own copy to win gifts!",
        tags=["python", "fastapi", "book", "launch"],
        location="Google Meet"
        )


def test_event_name(event: EventUpdate) -> None:
    assert event.title == "FastAPI Book Launch"


"""мы определили фикстуру, которая возвращает
экземпляр pydantic модели EventUpdate. Это приспособление передается в
качестве аргумента в функцию test_event_name, что позволяет сделать
свойства доступными.Декоратор фикстуры может дополнительно принимать аргументы. Одним из этих
аргументов является область действия — область действия фикстуры сообщает
pytest какова продолжительность функции фикстуры.
В этой главе мы будем использовать две области видимости:
• session: Эта область сообщает pytest, что нужно создать экземпляр
функции один раз для всего сеанса тестирования.
• module: Эта область инструктирует pytest выполнять добавленную функцию
только после выполнения тестового модуля."""
